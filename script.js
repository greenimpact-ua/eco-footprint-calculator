const form = document.getElementById("footprint-form");
const steps = document.querySelectorAll(".step");
const nextBtn = document.getElementById("next-button");
const prevBtn = document.getElementById("prev-button");
const submitBtn = document.getElementById("submit-button");

let currentStep = 0;

window.addEventListener("DOMContentLoaded", () => {
  document.querySelectorAll("input, select").forEach(el => {
    const saved = localStorage.getItem(el.id);
    if (saved !== null) el.value = saved;
  });
});

["car-diesel", "car-petrol", "car-gas", "car-electric", "car-none"].forEach(id => {
  const el = document.getElementById(id);
  el.addEventListener("change", () => {
    if (id === "car-none" && el.checked) {
      ["car-diesel", "car-petrol", "car-gas", "car-electric"]
        .forEach(other => document.getElementById(other).checked = false);
    } else if (id !== "car-none" && el.checked) {
      document.getElementById("car-none").checked = false;
    }
    updateTransportVisibility();
  });
});

function updateTransportVisibility() {
  const diesel = document.getElementById("car-diesel").checked;
  const petrol = document.getElementById("car-petrol").checked;
  const gas = document.getElementById("car-gas").checked;
  const electric = document.getElementById("car-electric").checked;

  const fuelBlock = document.getElementById("fuel-block");
  if (fuelBlock) {
    fuelBlock.classList.toggle("hidden", !(diesel || petrol));
    fuelBlock.classList.toggle("show", (diesel || petrol));
  }

  const chargeBlock = document.getElementById("charge-electric-block");
  if (chargeBlock) {
    chargeBlock.classList.toggle("show", electric);
    chargeBlock.classList.toggle("hidden-block", !electric);
  }

  const gasAutoBlock = document.getElementById("gas-auto-block");
  if (gasAutoBlock) {
    gasAutoBlock.classList.toggle("show", gas);
    gasAutoBlock.classList.toggle("hidden-block", !gas);
  }

  const carKmBlock = document.getElementById("car-km-block");
  if (carKmBlock) {
    const anyCar = diesel || petrol || gas || electric;
    carKmBlock.classList.toggle("hidden", !anyCar);
    carKmBlock.classList.toggle("show", anyCar);
  }
}

const showIfYes = (selectId, blockId) => {
  const selectEl = document.getElementById(selectId);
  const block = document.getElementById(blockId);

  if (selectEl && block) {
    block.classList.add("animated-block", "hidden");

    const toggle = () => {
      const shouldShow = selectEl.value === "yes";
      block.classList.toggle("hidden", !shouldShow);
      block.classList.toggle("show", shouldShow);
    };

    selectEl.addEventListener("change", toggle);
    toggle();
  }
};

showIfYes("use-electric-cooking", "electric-cooking-block");
showIfYes("use-gas-cooking", "gas-cooking-block");
showIfYes("use-dishwasher", "dishwasher-frequency-block");

const backBtn = document.getElementById("back-button");
if (backBtn) {
  backBtn.addEventListener("click", hideInfo);
}

showStep(currentStep);

nextBtn.addEventListener("click", () => {
  const currentStepEl = steps[currentStep];
  const inputs = currentStepEl.querySelectorAll("input, select");
  let isValid = true;

  for (const input of inputs) {
    if (input.closest(".hidden") || input.closest(".hidden-block")) {
      continue;
    }

    if (!input.checkValidity()) {
      input.classList.add("invalid");
      input.reportValidity();
      input.focus();
      isValid = false;
      break;
    }
  }

  if (isValid && currentStep < steps.length - 1) {
    steps[currentStep].classList.remove("active");
    currentStep++;
    showStep(currentStep);
  }
});

prevBtn.addEventListener("click", () => {
  if (currentStep > 0) {
    steps[currentStep].classList.remove("active");
    currentStep--;
    showStep(currentStep);
  }
});

function showStep(index) {
  const progressInner = document.getElementById("progress-inner");
  if (progressInner) {
    const percent = ((index + 1) / steps.length) * 100;
    progressInner.style.width = percent + "%";
  }
  steps.forEach((stepEl, i) => {
    stepEl.classList.toggle("active", i === index);
  });
  prevBtn.style.display = index === 0 ? "none" : "inline-block";
  nextBtn.style.display = index === steps.length - 1 ? "none" : "inline-block";
  submitBtn.style.display = index === steps.length - 1 ? "inline-block" : "none";
}

form.addEventListener("submit", function(event) {
  event.preventDefault();

  let hasError = false;
  let firstInvalidInput = null;

  steps.forEach((stepEl, index) => {
    const inputs = stepEl.querySelectorAll("input, select");
    inputs.forEach(input => {
      if (input.closest(".hidden") || input.closest(".hidden-block")) {
        return;
      }
      if (input.hasAttribute("required") && !input.value.trim()) {
        input.classList.add("invalid");
        if (!firstInvalidInput) {
          firstInvalidInput = input;
          currentStep = index;
        }
        hasError = true;
      } else {
        input.classList.remove("invalid");
      }
    });
  });

  if (hasError && firstInvalidInput) {
    steps.forEach(el => el.classList.remove("active"));
    showStep(currentStep);
    setTimeout(() => {
      firstInvalidInput.scrollIntoView({ behavior: "smooth", block: "center" });
      firstInvalidInput.focus();
    }, 100);
    return;
  }

  showResult();
});

function showResult() {
  form.style.display = "none";
  document.getElementById("final-result").style.display = "block";

  const get = id => parseFloat(document.getElementById(id).value) || 0;
  const val = id => document.getElementById(id).value;

  // ==== –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç ====
  let carKm = get("car-km");
  let transport = 0;
  if (document.getElementById("car-diesel").checked) {
  transport += carKm * 0.21 * 1.15;
  }
  if (document.getElementById("car-petrol").checked) {
    transport += carKm * 0.21 * 1.0;
  }
  if (document.getElementById("car-gas").checked) {
    transport += get("gas-auto-m3") * 2.02;
  }
  if (document.getElementById("car-electric").checked) {
    transport += carKm * 0.21 * 0.3; 
    transport += get("electric-car-kwh") * 0.09; 
  }
  transport += get("public-transport") * 0.105;
  transport -= get("bike-days") * 0.05;

  // ==== –ï–ª–µ–∫—Ç—Ä–∏–∫–∞ ====
  let electric = get("electricity") * 0.5 / 4;
  electric += get("electric-cooking") * 0.25;
  electric += get("computer-hours") * 0.2;
  if (val("electric-heating") === "yes") electric *= 1.5;
  electric *= 1 - (get("led-lamps") / 100 * 0.3);
  const electricCooking = val("use-electric-cooking") === "yes" ? get("electric-cooking") * 0.25 : 0;

  // ==== –ì–∞–∑ ====
  const gasM3 = get("gas-m3");
  let gas = 0;
  if (val("gas-use-heat") === "yes") {
  gas += gasM3 * 2.02 * 0.6;
  }
  if (val("gas-use-water") === "yes") {
  gas += gasM3 * 2.02 * 0.2;
  }
  if (val("use-gas-cooking") === "yes") {
  gas += get("gas-cooking-hours") * 0.2;
  }
  if (gas === 0 && gasM3 > 0) {
  gas = gasM3 * 2.02;
  }

  // ==== –á–∂–∞ ====
  const food = get("meat") * 27 +
               get("dairy") * 6 +
               get("eggs") * 0.5 +
               get("vegetables") * 2 +
               get("food-delivery") * 5;

  // ==== –í–æ–¥–∞ ====
  let water = get("shower-minutes") * get("shower-frequency") * 0.05 +
              get("washing-machine") * 0.3 +
              get("dishwasher-uses") * 1.5;
  if (val("water-saving") === "yes") water *= 0.8;

  // ==== –ü–æ–∫—É–ø–∫–∏ ====
  let shopping = (get("clothes") * 25 + get("shoes") * 30 + get("gadgets") * 200) / 52 +
                 get("plastic-bags") * 0.1;
  const secondhand = val("secondhand");
  if (secondhand === "often") shopping *= 0.6;
  else if (secondhand === "sometimes") shopping *= 0.8;

  // ==== –í—ñ–¥—Ö–æ–¥–∏ ====
  let waste = get("waste") * (val("recycling") === "yes" ? 0.3 : 0.6);
  waste -= get("bottles") * 0.05;
  waste *= 1 - (get("trash-percent") / 100);
  if (val("organic-compost") === "yes") waste *= 0.9;

  // ==== –ü–æ–±—É—Ç ====
  let habits = get("tv-hours") * 0.2 +
               Math.max(0, get("heating-temp") - 21) * 2 +
               get("ac-use") * 0.8;
  const lights = val("lights-off");
  if (lights === "always") habits *= 0.9;
  else if (lights === "sometimes") habits *= 0.95;
  const insulation = val("home-insulation");
  if (insulation === "yes") habits *= 0.8;
  else if (insulation === "partial") habits *= 0.9;

  // ==== –ò—Ç–æ–≥–∏ ====
  const values = [transport, electric, gas, food, water, shopping, waste, habits];
  const total = values.reduce((a, b) => a + b, 0);
  const labels = ["–ê–≤—Ç–æ", "–ï–ª–µ–∫—Ç—Ä–∏–∫–∞", "–ì–∞–∑", "–á–∂–∞", "–í–æ–¥–∞", "–ü–æ–∫—É–ø–∫–∏", "–í—ñ–¥—Ö–æ–¥–∏", "–ü–æ–±—É—Ç"];
  const colors = ["#FFCBA4", "#CAB8FF", "#FFEBB4", "#C1FBA4", "#A0E7E5", "#FFB5C2", "#B2C9A0", "#fffd9e"];

  // === –°–æ—Ä—Ç—É—î–º–æ –≤—ñ–¥ –±—ñ–ª—å—à–æ–≥–æ –¥–æ –º–µ–Ω—à–æ–≥–æ ===
  const dataset = labels.map((label, i) => ({
  label,
  value: values[i],
  color: colors[i],
  originalIndex: i
    }));
  dataset.sort((a, b) => b.value - a.value);

  // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—É—î–º–æ labels, values, colors —É –Ω–æ–≤–æ–º—É –ø–æ—Ä—è–¥–∫—É
  const sortedLabels = dataset.map(item => item.label);
  const sortedValues = dataset.map(item => item.value);
  const sortedColors = dataset.map(item => item.color);
  const sortedOriginalIndices = dataset.map(item => item.originalIndex);

  // === –í–∏–≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ ===
  const resultBlock = document.getElementById("result");
  resultBlock.innerText = `–í–∞—à –æ—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–π –µ–∫–æ–ª–æ–≥—ñ—á–Ω–∏–π —Å–ª—ñ–¥: ${total.toFixed(2)} –∫–≥ CO‚ÇÇ`;

  const adviceBox = document.getElementById("advice-box");
  const maxIndex = values.indexOf(Math.max(...values));
  const advices = [
  // 0 ‚Äî –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç
  "üöó –°–ø—Ä–æ–±—É–π—Ç–µ —Ö–æ—á–∞ –± –æ–¥–∏–Ω –¥–µ–Ω—å –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å –∑–∞–ª–∏—à–∏—Ç–∏ –∞–≤—Ç–æ –≤–¥–æ–º–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –ø–æ—ó—Ö–∞—Ç–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥–æ–º, –ø—ñ—à–∫–∏ –∞–±–æ –≥—Ä–æ–º–∞–¥—Å—å–∫–∏–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–æ–º. –¶–µ –∫–æ—Ä–∏—Å–Ω–æ —ñ –¥–ª—è –ø–ª–∞–Ω–µ—Ç–∏, —ñ –¥–ª—è –∑–¥–æ—Ä–æ–≤‚Äô—è!",

  // 1 ‚Äî –ï–ª–µ–∫—Ç—Ä–∏–∫–∞
  "‚ö° –ó–∞–º—ñ–Ω—ñ—Ç—å —Å—Ç–∞—Ä—ñ –ª–∞–º–ø–∏ –Ω–∞ LED ‚Äî —Ü–µ –Ω–µ —Ç—ñ–ª—å–∫–∏ –∑–º–µ–Ω—à–∏—Ç—å —Ä–∞—Ö—É–Ω–æ–∫, –∞ –π –ø—Ä–æ–¥–æ–≤–∂–∏—Ç—å –∂–∏—Ç—Ç—è –≤–∞—à–æ—ó –µ–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏. –Ü –Ω–µ –∑–∞–±—É–≤–∞–π—Ç–µ –≤–∏–º–∏–∫–∞—Ç–∏ —Ç–µ—Ö–Ω—ñ–∫—É –∑ —Ä–æ–∑–µ—Ç–∫–∏!",

  // 2 ‚Äî –ì–∞–∑
  "üî• –Ø–∫—â–æ —É –≤–∞—Å –≥–∞–∑–æ–≤–∞ –ø–ª–∏—Ç–∞ —á–∏ –∫–æ—Ç–µ–ª ‚Äî —É—Ç–µ–ø–ª—ñ—Ç—å –≤—ñ–∫–Ω–∞ —Ç–∞ –¥–≤–µ—Ä—ñ, –≥–æ—Ç—É–π—Ç–µ –∑ –∫—Ä–∏—à–∫–æ—é —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ–Ω—à—ñ –∫–æ–Ω—Ñ–æ—Ä–∫–∏. –¶–µ —Ä–µ–∞–ª—å–Ω–æ –∑–º–µ–Ω—à—É—î –≤–∏—Ç—Ä–∞—Ç–∏ –π –≤–∏–∫–∏–¥–∏ CO‚ÇÇ.",

  // 3 ‚Äî –á–∂–∞
  "ü•¶ –ó–∞–º—ñ–Ω—ñ—Ç—å –æ–¥–Ω–µ –º‚Äô—è—Å–Ω–µ –±–ª—é–¥–æ –Ω–∞ –æ–≤–æ—á–µ–≤–µ ‚Äî –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ç—É—à–∫–æ–≤–∞–Ω—ñ –æ–≤–æ—á—ñ –∑ –∫–≤–∞—Å–æ–ª–µ—é –∞–±–æ —Å–æ—á–µ–≤–∏—á–Ω–∏–π —Å—É–ø. –¶–µ —Å–º–∞—á–Ω–æ, –ø–æ–∂–∏–≤–Ω–æ –π –µ–∫–æ–ª–æ–≥—ñ—á–Ω–æ!",

  // 4 ‚Äî –í–æ–¥–∞
  "üöø –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –∞–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –∫—Ä–∞–Ω –∞–±–æ –¥—É—à. –í–∏ –Ω–µ –≤—ñ–¥—á—É—î—Ç–µ —Ä—ñ–∑–Ω–∏—Ü—é —É –ø–æ—Ç–æ—Ü—ñ, –∞–ª–µ –∑–µ–∫–æ–Ω–æ–º–∏—Ç–µ –¥–æ 50% –≤–æ–¥–∏. –Ü –Ω–∞–≥–∞–¥–∞–π—Ç–µ —Å—É—Å—ñ–¥–∞–º üòâ",

  // 5 ‚Äî –ü–æ–∫—É–ø–∫–∏
  "üõçÔ∏è –ù–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–∞–∑—É, –∫–æ–ª–∏ –∑–∞—Ö–æ—á–µ—Ç—å—Å—è –∫—É–ø–∏—Ç–∏ —â–µ –æ–¥–Ω—É –∫–æ—Ñ—Ç—É ‚Äî –∑—Ä–æ–±—ñ—Ç—å –ø–∞—É–∑—É. –ß–∏ —Ç–æ—á–Ω–æ –≤–æ–Ω–∞ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–∞? –ú–æ–∂–ª–∏–≤–æ, –≤–∞—Ä—Ç–æ –æ–±—Ä–∞—Ç–∏ —â–æ—Å—å —ñ–∑ —Å–µ–∫–æ–Ω–¥—É –∞–±–æ –≤–∑–∞–≥–∞–ª—ñ —É—Ç—Ä–∏–º–∞—Ç–∏—Å—å üòå",

  // 6 ‚Äî –í—ñ–¥—Ö–æ–¥–∏
  "‚ôªÔ∏è –ü–æ—á–Ω—ñ—Ç—å –∑ –º–∞–ª–æ–≥–æ ‚Äî –∫—É–ø—É–π—Ç–µ –±–µ–∑ —É–ø–∞–∫–æ–≤–∫–∏, –±–µ—Ä—ñ—Ç—å —Ç–æ—Ä–±–∏–Ω–∫–∏ –Ω–∞ —Ä–∏–Ω–æ–∫ —ñ –∑–¥–∞–≤–∞–π—Ç–µ —Å–∫–ª—è–Ω—ñ –ø–ª—è—à–∫–∏. –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è ‚Äî –Ω–µ —Å–∫–ª–∞–¥–Ω–æ, —è–∫—â–æ –∑—Ä–æ–±–∏—Ç–∏ –∑ —Ü—å–æ–≥–æ –∑–≤–∏—á–∫—É!",

  // 7 ‚Äî –ü–æ–±—É—Ç
  "üè† –í–∏–º–∏–∫–∞–π—Ç–µ —Å–≤—ñ—Ç–ª–æ –Ω–∞–≤—ñ—Ç—å –∫–æ–ª–∏ –≤–∏—Ö–æ–¥–∏—Ç–µ ¬´–Ω–µ–Ω–∞–¥–æ–≤–≥–æ¬ª, –∞ –≤–∑–∏–º–∫—É –≤—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —Ç–µ—Ä–º–æ–≥–æ–ª–æ–≤–∫–∏ –Ω–∞ –±–∞—Ç–∞—Ä–µ—ó. –ö–æ–∂–µ–Ω –≥—Ä–∞–¥—É—Å ‚Äî —Ü–µ CO‚ÇÇ —ñ –≥—Ä–æ—à—ñ!"
  ];
  adviceBox.innerHTML = `<strong>–ü–æ—Ä–∞–¥–∞:</strong> ${advices[maxIndex]}`;
  adviceBox.classList.add("show");
  adviceBox.style.display = "block";

  // === –ì—Ä–∞—Ñ—ñ–∫ ===
  const chartSection = document.getElementById("chart-section");
  chartSection.style.display = "flex";
  chartSection.style.opacity = "0";
  chartSection.style.transition = "opacity 0.5s ease";

  setTimeout(() => {
    chartSection.style.opacity = "1";
    if (window.myChart) window.myChart.destroy();
    const ctx = document.getElementById("chart").getContext("2d");
    window.myChart = new Chart(ctx, {
      type: "pie",
      data: {
        labels: sortedLabels,
        datasets: [{ data: sortedValues, backgroundColor: sortedColors }]
      },
      options: {
        responsive: false,
        events: [],
        animation: {
          animateRotate: true,
          animateScale: true,
          duration: 1200,
          delay: 400
        },
        rotation: -Math.PI / 2,
        plugins: {
          tooltip: { enabled: false },
          legend: { display: false },
          datalabels: {
            color: "#fff",
            font: { weight: "bold", size: 14 },
            formatter: function(value, context) {
              const ds = context.chart.data.datasets[0].data;
              const tot = ds.reduce((a, b) => a + b, 0);
              return `${((value / tot) * 100).toFixed(1)}%`;
            }
          }
        }
      }
    });

const legendBox = document.querySelector(".legend-box");
legendBox.innerHTML = "";

dataset.forEach((item, idx) => {
  const percent = ((item.value / total) * 100).toFixed(1);

  const div = document.createElement("div");
  div.style.opacity = "0";
  div.style.animation = `legend-fade-in 0.5s ease forwards`;
  div.style.animationDelay = `${idx * 0.2}s`;

  div.innerHTML = `
    <span class="legend-color" style="background:${item.color}"></span>
    ${item.label} ‚Äî ${item.value.toFixed(1)} –∫–≥ (${percent}%)
  `;

  legendBox.appendChild(div);
});

    const editButtonContainer = document.getElementById("edit-button-container");
    if (editButtonContainer) {
      editButtonContainer.style.display = "flex";
      editButtonContainer.style.opacity = "0";
      editButtonContainer.style.transform = "scale(0.8)";
      editButtonContainer.style.transition = "all 0.5s ease";
      setTimeout(() => {
        editButtonContainer.style.opacity = "1";
        editButtonContainer.style.transform = "scale(1)";
      }, 500);
    }
  }, 100);
}

function showInfo(type) {
  document.getElementById("footprint-form").style.display = "none";
  document.getElementById("progress-bar").style.display = "none";
  document.getElementById("final-result").style.display  = "none";
  document.querySelector(".site-footer").style.display    = "none";

  const adviceBox    = document.getElementById("advice-box");
  adviceBox.classList.remove("show");

  const chartSection = document.getElementById("chart-section");
  chartSection.style.display = "none";

  const infoBlock        = document.getElementById("info-block");
  const backBtnContainer = document.getElementById("back-button-container");

  infoBlock.classList.remove("hidden");
  infoBlock.classList.add("visible");
  backBtnContainer.classList.remove("hidden");

  let html = "";
  if (type === "author-ref") {
  html = `
    <h2>–ê–≤—Ç–æ—Ä—Å—å–∫–∞ –¥–æ–≤—ñ–¥–∫–∞ üìò</h2>
    <p>–¶–µ–π –≤–µ–±–∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫ —Ä–æ–∑—Ä–æ–±–ª–µ–Ω–æ —É –º–µ–∂–∞—Ö –¥–∏–ø–ª–æ–º–Ω–æ–≥–æ –ø—Ä–æ—î–∫—Ç—É –∑ –∫–æ–º–ø‚Äô—é—Ç–µ—Ä–Ω–æ—ó —ñ–Ω–∂–µ–Ω–µ—Ä—ñ—ó. –û—Å–Ω–æ–≤–Ω–∞ –º–µ—Ç–∞ ‚Äî —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑—Ä—É—á–Ω–∏–π —Ç–∞ —ñ–Ω—Ç—É—ó—Ç–∏–≤–Ω–∏–π —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–∏–±–ª–∏–∑–Ω–æ—ó –æ—Ü—ñ–Ω–∫–∏ –µ–∫–æ–ª–æ–≥—ñ—á–Ω–æ–≥–æ —Å–ª—ñ–¥—É –ª—é–¥–∏–Ω–∏ üåç.</p>

    <p>–Ü–¥–µ—è –≤–∏–Ω–∏–∫–ª–∞ –ø—ñ–¥ —á–∞—Å –≤–∏–≤—á–µ–Ω–Ω—è —Ç–µ–º–∏ –≤–ø–ª–∏–≤—É –ø–æ–±—É—Ç–æ–≤–æ—ó –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ –Ω–∞ –¥–æ–≤–∫—ñ–ª–ª—è. –ë–∞–≥–∞—Ç–æ —Å–µ—Ä–≤—ñ—Å—ñ–≤, –ø—Ä–∏—Å–≤—è—á–µ–Ω–∏—Ö —Ü—å–æ–º—É, –∞–±–æ –Ω–∞–¥—Ç–æ —Å–∫–ª–∞–¥–Ω—ñ, –∞–±–æ –æ—Ä—ñ—î–Ω—Ç–æ–≤–∞–Ω—ñ –Ω–∞ —ñ–Ω–æ–∑–µ–º–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –•–æ—Ç—ñ–ª–æ—Å—è –∑—Ä–æ–±–∏—Ç–∏ —â–æ—Å—å –ø—Ä–æ—Å—Ç–µ, –∑—Ä–æ–∑—É–º—ñ–ª–µ –π –∞–¥–∞–ø—Ç–æ–≤–∞–Ω–µ –ø—ñ–¥ –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–µ –∂–∏—Ç—Ç—è –≤ –£–∫—Ä–∞—ó–Ω—ñ üá∫üá¶.</p>

    <p>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—Ö–æ–ø–ª—é—î –¥–µ–∫—ñ–ª—å–∫–∞ –∫–ª—é—á–æ–≤–∏—Ö –Ω–∞–ø—Ä—è–º–∫—ñ–≤: —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—è, –≥–∞–∑, —ó–∂–∞, –≤–æ–¥–∞, –ø–æ–∫—É–ø–∫–∏, –≤—ñ–¥—Ö–æ–¥–∏ —Ç–∞ –ø–æ–±—É—Ç–æ–≤—ñ –∑–≤–∏—á–∫–∏. –î–ª—è –∫–æ–∂–Ω–æ—ó —Å—Ñ–µ—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–ø–æ–≤–Ω—é—î –Ω–µ–≤–µ–ª–∏–∫—É —Ñ–æ—Ä–º—É, –ø—ñ—Å–ª—è —á–æ–≥–æ —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞—Ö–æ–≤—É—î –ø—Ä–∏–±–ª–∏–∑–Ω–∏–π –æ–±—Å—è–≥ –≤–∏–∫–∏–¥—ñ–≤ CO‚ÇÇ.</p>

    <p>–ü—ñ—Å–ª—è —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±–∞—á–∏—Ç—å –Ω–µ –ª–∏—à–µ –ø—ñ–¥—Å—É–º–∫–æ–≤–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∞ –π –¥—ñ–∞–≥—Ä–∞–º—É —Ä–æ–∑–ø–æ–¥—ñ–ª—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö üìä, –∞ —Ç–∞–∫–æ–∂ –ø–æ—Ä–∞–¥—É üí° ‚Äî —è–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ –∑—Ä–æ–∑—É–º—ñ—Ç–∏, –∑ —á–æ–≥–æ –Ω–∞–π–∫—Ä–∞—â–µ –ø–æ—á–∞—Ç–∏ –∑–º—ñ–Ω–∏.</p>

    <p>–†–æ–±–æ—Ç–∞ –≤–∏–∫–æ–Ω—É–≤–∞–ª–∞—Å—å –ø–æ–µ—Ç–∞–ø–Ω–æ: –≤—ñ–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–∫–∏ –¥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É. –£—Å–µ –∑—Ä–æ–±–ª–µ–Ω–æ –≤—Ä—É—á–Ω—É üõ†Ô∏è ‚Äî –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ñ–≤ —á–∏ —à–∞–±–ª–æ–Ω—ñ–≤.</p>

    <p><strong>–©–æ –∑—Ä–æ–±–ª–µ–Ω–æ –≤–ª–∞—Å–Ω–æ—Ä—É—á:</strong></p>
    <ul>
      <li>üìå –ó–±—ñ—Ä —ñ –∞–Ω–∞–ª—ñ–∑ –¥–∞–Ω–∏—Ö –ø–æ –≤–∏–∫–∏–¥–∞—Ö CO‚ÇÇ</li>
      <li>üé® UI/UX-–¥–∏–∑–∞–π–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞</li>
      <li>üíª –†–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—Å—ñ—î—ó –ª–æ–≥—ñ–∫–∏ –Ω–∞ JavaScript</li>
      <li>üìà –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥—ñ–∞–≥—Ä–∞–º–∏, –ø–æ—Ä–∞–¥ —Ç–∞ –≥—Ä–∞—Ñ—ñ–∫–∏</li>
    </ul>

    <p>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–æ–≤–Ω—ñ—Å—Ç—é –ø—Ä–∞—Ü—é—î –≤ –±—Ä–∞—É–∑–µ—Ä—ñ, –Ω–µ –≤–∏–º–∞–≥–∞—î —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —ñ –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—î –æ—Å–æ–±–∏—Å—Ç–∏—Ö –¥–∞–Ω–∏—Ö üîí. –í—Ä–∞—Ö–æ–≤–∞–Ω–æ –∞–¥–∞–ø—Ç–∏–≤–Ω—ñ—Å—Ç—å –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ üì± —Ç–∞ –∑—Ä—É—á–Ω—ñ—Å—Ç—å –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó.</p>

    <p>–Ø–∫—â–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–∞–Ω–µ –¥–ª—è –∫–æ–≥–æ—Å—å –∑—Ä—É—á–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –Ω–∞ —Å–≤—ñ–π –ø–æ–±—É—Ç –∑ —ñ–Ω—à–æ–≥–æ –±–æ–∫—É ‚Äî –≤—ñ–Ω —É–∂–µ –≤–∏–∫–æ–Ω–∞–≤ —Å–≤–æ—é –∑–∞–¥–∞—á—É ‚úÖ</p>
  `;
  } else if (type === "tech-doc") {
    html = `
    <h2>–¢–µ—Ö–Ω—ñ—á–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è ‚öôÔ∏è</h2>
    <p>–¶–µ–π –≤–µ–±–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–≤–æ—Ä–µ–Ω–æ –¥–ª—è –ø—Ä–∏–±–ª–∏–∑–Ω–æ—ó –æ—Ü—ñ–Ω–∫–∏ –≤–∏–∫–∏–¥—ñ–≤ CO‚ÇÇ –≤–Ω–∞—Å–ª—ñ–¥–æ–∫ –ø–æ–≤—Å—è–∫–¥–µ–Ω–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±—É –∂–∏—Ç—Ç—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –í—Å—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ –ø—Ä–æ–≤–æ–¥—è—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–≤–µ–¥–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö —É —Ä—ñ–∑–Ω–∏—Ö —Å—Ñ–µ—Ä–∞—Ö: —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—è, –≥–∞–∑, —ó–∂–∞, –≤–æ–¥–∞, –ø–æ–∫—É–ø–∫–∏, –≤—ñ–¥—Ö–æ–¥–∏ —Ç–∞ –ø–æ–±—É—Ç–æ–≤—ñ –∑–≤–∏—á–∫–∏.</p>

    <p>üßÆ <strong>–†–æ–∑—Ä–∞—Ö—É–Ω–∫–∏:</strong><br>
    –ö–æ–∂–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è –º–∞—î —Å–≤—ñ–π –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –≤–ø–ª–∏–≤—É –Ω–∞ –≤–∏–∫–∏–¥–∏ CO‚ÇÇ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è –∞–≤—Ç–æ –≤—Ä–∞—Ö–æ–≤—É—î—Ç—å—Å—è —Ç–∏–ø –¥–≤–∏–≥—É–Ω–∞ —Ç–∞ –∫—ñ–ª–æ–º–µ—Ç—Ä–∞–∂, –¥–ª—è –µ–ª–µ–∫—Ç—Ä–æ–µ–Ω–µ—Ä–≥—ñ—ó ‚Äî –æ–±—Å—è–≥ —Å–ø–æ–∂–∏–≤–∞–Ω–Ω—è —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è LED-–ª–∞–º–ø, –∞ –¥–ª—è —ó–∂—ñ ‚Äî —á–∞—Å—Ç–æ—Ç–∞ —Å–ø–æ–∂–∏–≤–∞–Ω–Ω—è –º‚Äô—è—Å–∞, –º–æ–ª–æ—á–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ —Ç–æ—â–æ. –§–æ—Ä–º—É–ª–∏ –ø–æ–±—É–¥–æ–≤–∞–Ω—ñ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∑–∞–≥–∞–ª—å–Ω–æ–¥–æ—Å—Ç—É–ø–Ω–∏—Ö –µ–∫–æ–ª–æ–≥—ñ—á–Ω–∏—Ö –¥–æ—Å–ª—ñ–¥–∂–µ–Ω—å —Ç–∞ –∞–¥–∞–ø—Ç–æ–≤–∞–Ω—ñ –ø—ñ–¥ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –£–∫—Ä–∞—ó–Ω–∏ üá∫üá¶.</p>

    <p>üí° <strong>–¢–µ—Ö–Ω–æ–ª–æ–≥—ñ—á–Ω–µ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:</strong><br>
    –£—Å—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è –Ω–∞ –∫–ª—ñ—î–Ω—Ç—Å—å–∫—ñ–π —Å—Ç–æ—Ä–æ–Ω—ñ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é JavaScript. –î–∞–Ω—ñ –Ω–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ç–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä üåê, —â–æ –∑–∞–±–µ–∑–ø–µ—á—É—î –∫–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –Ü–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —ñ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º HTML/CSS/JS –±–µ–∑ —Å—Ç–æ—Ä–æ–Ω–Ω—ñ—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫ —á–∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫—ñ–≤.</p>

    <p>üìä <strong>–í—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è:</strong><br>
    –ü—ñ—Å–ª—è –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —É—Å—ñ—Ö –µ—Ç–∞–ø—ñ–≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–∏–≤–æ–¥–∏—Ç—å –¥—ñ–∞–≥—Ä–∞–º—É —Ä–æ–∑–ø–æ–¥—ñ–ª—É –≤–∏–∫–∏–¥—ñ–≤ –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏ (–¥—ñ–∞–≥—Ä–∞–º–∞ —Ç–∏–ø—É "pie") –∑ –ø—ñ–¥–ø–∏—Å–∞–º–∏ —Ç–∞ –∫–æ–ª—å–æ—Ä–æ–≤–æ—é –ª–µ–≥–µ–Ω–¥–æ—é. –¢–∞–∫–æ–∂ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î—Ç—å—Å—è —ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ –ø–æ—Ä–∞–¥–∞, —â–æ –±–∞–∑—É—î—Ç—å—Å—è –Ω–∞ –Ω–∞–π–±—ñ–ª—å—à –≤–ø–ª–∏–≤–æ–≤—ñ–π —Å—Ñ–µ—Ä—ñ.</p>

    <p>üîÅ <strong>–ê–¥–∞–ø—Ç–∏–≤–Ω—ñ—Å—Ç—å:</strong><br>
    –î–∏–∑–∞–π–Ω –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –ø—ñ–¥ —Ä—ñ–∑–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ –µ–∫—Ä–∞–Ω—ñ–≤: –≤—ñ–¥ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ñ–≤ –¥–æ –Ω–æ—É—Ç–±—É–∫—ñ–≤. –£–ø—Ä–æ–≤–∞–¥–∂–µ–Ω—ñ –±–∞–∑–æ–≤—ñ –∞–Ω—ñ–º–∞—Ü—ñ—ó, –ø–æ–∫—Ä–æ–∫–æ–≤–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è, –ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä —Ç–∞ –±–ª–æ–∫–∏ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é, —è–∫—ñ –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –æ–∫—Ä–µ–º–æ.</p>
  `;
 } else if (type === "resources") {
  html = `
    <h2>–†–µ—Å—É—Ä—Å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ üìö</h2>
    <p><strong>üåç –©–æ —Ç–∞–∫–µ –µ–∫–æ–ª–æ–≥—ñ—á–Ω–∏–π —Å–ª—ñ–¥?</strong><br>
    –¶–µ —É–º–æ–≤–Ω–∞ ¬´–≤—ñ–¥–º—ñ—Ç–∫–∞¬ª –≤–∏–∫–∏–¥—ñ–≤ CO‚ÇÇ, —è–∫—ñ –º–∏ –∑–∞–ª–∏—à–∞—î–º–æ –≤–Ω–∞—Å–ª—ñ–¥–æ–∫ —â–æ–¥–µ–Ω–Ω–∏—Ö –¥—ñ–π: –ø–µ—Ä–µ—Å—É–≤–∞–Ω–Ω—è, —Å–ø–æ–∂–∏–≤–∞–Ω–Ω—è –µ–Ω–µ—Ä–≥—ñ—ó, –≤–∏–±–æ—Ä—É —ó–∂—ñ, –ø–æ–∫—É–ø–æ–∫, –ø–æ–≤–æ–¥–∂–µ–Ω–Ω—è –∑ –≤—ñ–¥—Ö–æ–¥–∞–º–∏.</p>

    <p><strong>üîÑ –ù–∞ —â–æ –≤—ñ–Ω –≤–ø–ª–∏–≤–∞—î?</strong><br>
    –í–∏—Å–æ–∫–∏–π –µ–∫–æ—Å–ª—ñ–¥ –æ–∑–Ω–∞—á–∞—î –±—ñ–ª—å—à–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É: –≤–∏—á–µ—Ä–ø—É–≤–∞–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤, –∑–∞–±—Ä—É–¥–Ω–µ–Ω–Ω—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∏, –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è –∑–º—ñ–Ω –∫–ª—ñ–º–∞—Ç—É. –¢–µ, —è–∫ –º–∏ —ó–∑–¥–∏–º–æ, —â–æ –∫—É–ø—É—î–º–æ, —Å–∫—ñ–ª—å–∫–∏ —Å–ø–æ–∂–∏–≤–∞—î–º–æ ‚Äî —É—Å–µ –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è.</p>

    <p><strong>üíö –©–æ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ –≤–∂–µ —Å—å–æ–≥–æ–¥–Ω—ñ?</strong></p>
    <ul>
      <li>üö≤ –û–±—Ä–∞—Ç–∏ –≤–µ–ª–æ—Å–∏–ø–µ–¥ —á–∏ –≥—Ä–æ–º–∞–¥—Å—å–∫–∏–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç –∑–∞–º—ñ—Å—Ç—å –∞–≤—Ç–æ</li>
      <li>üíß –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤–æ–¥–æ–∑–±–µ—Ä—ñ–≥–∞—é—á—ñ –Ω–∞—Å–∞–¥–∫–∏ —Ç–∞ –∫–æ—Ä–æ—Ç—à–∏–π –¥—É—à</li>
      <li>üõí –ó–º–µ–Ω—à–∏—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –ø–æ–∫—É–ø–æ–∫</li>
      <li>‚ôªÔ∏è –°–æ—Ä—Ç—É–≤–∞—Ç–∏ —Å–º—ñ—Ç—Ç—è —Ç–∞ –∑–¥–∞–≤–∞—Ç–∏ –≤—Ç–æ—Ä—Å–∏—Ä–æ–≤–∏–Ω—É</li>
      <li>ü•¶ –£—Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–∏—Ç–∏ —Ä–∞—Ü—ñ–æ–Ω ‚Äî –¥–æ–¥–∞—Ç–∏ –±—ñ–ª—å—à–µ —Ä–æ—Å–ª–∏–Ω–Ω–æ—ó —ó–∂—ñ</li>
    </ul>

    <p>–ú–∞–ª–µ–Ω—å–∫—ñ –∑–º—ñ–Ω–∏ –º–æ–∂—É—Ç—å –¥–∞–≤–∞—Ç–∏ –≤–µ–ª–∏–∫–∏–π –µ—Ñ–µ–∫—Ç, —è–∫—â–æ —ó—Ö —Ä–æ–±–ª—è—Ç—å –±–∞–≥–∞—Ç–æ –ª—é–¥–µ–π. –¶–µ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä ‚Äî –ª–∏—à–µ –ø–µ—Ä—à–∏–π –∫—Ä–æ–∫ –¥–æ —Ç–æ–≥–æ, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –∫–∞—Ä—Ç–∏–Ω—É –∑–∞–≥–∞–ª–æ–º üë£</p>
  `;
}
  infoBlock.innerHTML = `<div class="info-inner">${html}</div>`;
}

function hideInfo() {
  document.getElementById("footprint-form").style.display = "block";
  document.querySelector(".progress-bar").style.display = "block";
  document.getElementById("final-result").style.display = "none";
  document.querySelector(".site-footer").style.display = "block";

  const infoBlock = document.getElementById("info-block");
  const backBtnContainer = document.getElementById("back-button-container");
  infoBlock.classList.remove("visible");
  infoBlock.classList.add("hidden");
  backBtnContainer.classList.add("hidden");
  infoBlock.innerHTML = "";
}

document.getElementById("edit-button").addEventListener("click", () => {
  document.getElementById("final-result").style.display = "none";
  document.getElementById("footprint-form").style.display = "block";
  document.getElementById("progress-bar").style.display = "block";
  document.querySelector(".site-footer").style.display = "block";

  const adviceBox = document.getElementById("advice-box");
  adviceBox.classList.remove("show");
  adviceBox.style.display = "none";

  const editButtonContainer = document.getElementById("edit-button-container");
  if (editButtonContainer) editButtonContainer.style.display = "none";

  steps.forEach(step => step.classList.remove("active"));
  currentStep = 0;
  showStep(currentStep);
});

// –°–Ω–∏–º–∞–µ–º –∫—Ä–∞—Å–Ω—É—é —Ä–∞–º–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
document.querySelectorAll("input, select").forEach(input => {
  input.addEventListener("input", () => {
    input.classList.remove("invalid");
  });
});